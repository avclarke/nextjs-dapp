import { useEffect, useState } from 'react'
import { useWeb3React } from '@web3-react/core'
import Head from 'next/head'

import styles from '../styles/Home.module.css'
import ConnectWallet from '../components/ConnectWallet'
import StakeManager from '../components/StakeManager'
import { injected } from '../injected'

function HomeContent() {
  const { account, activate, active } = useWeb3React()

  const [attempted, setAttempted] = useState(false)
  const [unsupportedChain, setUnsupportedChain] = useState(false)

  const isConnected = !!account

  useEffect(() => {
    injected.isAuthorized().then((isAuthorized) => {
      const { supportedChainIds } = injected

      const { chainId = 1 } = window.ethereum || {}

      const parsedChainId = parseInt(chainId, 16)
      const supportedChain = supportedChainIds.includes(parsedChainId)
      setUnsupportedChain(!supportedChain)

      if (isAuthorized && supportedChain) {
        activate(injected, undefined, true).catch(() => {
          setAttempted(true)
        })
      } else {
        setAttempted(true)
      }
    })
  }, [activate, window.ethereum?.chainId])

  useEffect(() => {
    if (!attempted && active) {
      setAttempted(true)
    }
  }, [attempted, active])

  if (unsupportedChain) {
    return (
      <div>
        This dapp currently only runs on Ropsten, please switch to the Ropsten
        network in your wallet.
      </div>
    )
  }

  return (
    <>
      <h1 className={styles.title}>Next JS Dapp</h1>
      {isConnected ? <StakeManager /> : <ConnectWallet attempted={attempted} />}
    </>
  )
}

export default function Home() {
  return (
    <div className={styles.container}>
      <Head>
        <title>Next Dapp</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <HomeContent />
      </main>
    </div>
  )
}
